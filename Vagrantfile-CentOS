# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "centos/7"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network "forwarded_port", guest: 8888, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder ".", "/vagrant", type: "virtualbox", disabled: false
  
  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = true
  
    # Customize the amount of memory on the VM:
    vb.memory = "2048"
  end
 
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
	# German keyboard
	sudo localectl set-keymap de-latin1
  
	# Add mosquitto repository
  	sudo wget http://download.opensuse.org/repositories/home:/oojah:/mqtt/CentOS_CentOS-7/home:oojah:mqtt.repo -O /etc/yum.repos.d/home:oojah:mqtt.repo
    sudo yum -y update
	
	# Install prerequisites
    sudo yum groupinstall -y development
	sudo yum install -y zlib-dev openssl-devel sqlite-devel bzip2-devel wget curl vim git java graphviz mosquitto
	
	# Download python
	wget https://www.python.org/ftp/python/3.5.2/Python-3.5.2.tgz
	tar -xvvzf Python-3.5.2.tgz
	rm Python-3.5.2.tgz

	cd Python-3.5.2
	./configure --prefix=$HOME/usr/local
	make
	make altinstall
	rm -rf Python-3.5.2

	export PATH="$HOME/usr/local/bin:$PATH"
	
	pip3.5 install --upgrade pip
	pip3.5 install jupyter
	pip3.5 install RISE
	jupyter-nbextension install rise --py --sys-prefix
    jupyter-nbextension enable rise --py --sys-prefix
    pip3.5 install plotly
	pip3.5 install pysolar
	pip3 install --egg --install-option="--jarpath=./plantuml.jar" iplantuml
	wget https://sourceforge.net/projects/plantuml/files/plantuml.jar/download -O usr/local/lib/python3.5/site-packages/iplantuml/plantuml.jar

	pip3.5 install numpy
	pip3.5 install scipy
	
	mkdir -p what-the-data
	git clone https://github.com/nikolai-hlubek/terawatt /home/vagrant/what-the-data
	
  SHELL
  
    config.vm.provision "shell", 
    inline: "nohup $HOME/usr/local/bin/jupyter-notebook --ip 0.0.0.0 --port 8888 --notebook-dir=$HOME --no-browser &",
    privileged: false,
    run: "always"

end


#Known Issues
#
#The VirtualBox Guest Additions are not preinstalled; if you need them for shared folders, please install the vagrant-vbguest plugin. We recommend using NFS instead of VirtualBox shared folders if possible.
#Since the Guest Additions are missing, our images are preconfigured to use rsync for synced folders. Windows users can either use SMB for synced folders, or disable the sync directory by adding the line config.vm.synced_folder ".", "/vagrant", disabled: true to the Vagrantfile.
#Vagrant 1.8.5 is unable to create new Linux boxes due to Vagrant bug #7610. You can use Vagrant 1.8.4 until version 1.8.6 is released.
